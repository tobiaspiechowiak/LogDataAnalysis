data.lr$Audiogram.Int[data.lr$Audiogram.Int == c(9)] <- 3
data.lr$sex.Int <- as.integer(data.lr$sex)
data.lr$fifteen_d_1_move.Int <- as.integer(data.lr$fifteen_d_1_move)
data.lr$own_ha.x.Int <- as.integer(data.lr$own_ha.x)
data.lr$alcohol_consumption.Int <- as.integer(data.lr$alcohol_consumption)
data.lr$noise_work_duration_1.Int <- as.integer(data.lr$noise_work_duration_1)
data.lr$noise_work_intensity_1.Int <- as.integer(data.lr$noise_work_intensity_1)
data.lr$ha_type[(data.lr$ha_type == 1) | (data.lr$ha_type == 2)] <- 1
data.lr$ha_type[!((data.lr$ha_type == 1) | (data.lr$ha_type == 2))] <- 2
eq3 <- ha_usetime_hours_per_day ~ ioi_ha_2 + ioi_ha_3 + ioi_ha_4 + ioi_ha_5 + ioi_ha_6 + ioi_ha_7  + Motivation + ssq_speech_q1 + ssq_speech_q4 + ssq_sound_q2 + ssq_speech_q10 + ssq_speech_q11 + ssq_speech_q12 + ssq_space_q6 + ssq_space_q9 + ssq_space_q13 + ssq_sound_q7 + ssq_sound_q9 + ssq_sound_q14 + Audiogram.Int + age +  sex.Int +
fifteen_d_3_hear + fifteen_d_4_breathe + fifteen_d_5_sleep + fifteen_d_6_eat + fifteen_d_1_move.Int + fifteen_d_2_sight + fifteen_d_7_speak + fifteen_d_8_pee + fifteen_d_9_activity + fifteen_d_10_mental + fifteen_d_11_unplesant + fifteen_d_12_depression + fifteen_d_13_stress + fifteen_d_14_power + fifteen_d_15_sex + dissiness + Hyperacusis +  alcohol_consumption.Int +  ha_type
fit.lm <- lm(eq3,data = data.lr, na.action=na.omit)
summary(fit.lm)
colnames(data.lr)[104] <- 'Motivation'
colnames(data.lr)[94] <- 'Hyperacusis'
colnames(data.lr)[115] <- 'Audiogram'
data.lr$Audiogram.Int <- as.integer(data.lr$Audiogram)
data.lr$Audiogram.Int[data.lr$Audiogram.Int == c(7)] <- 1
data.lr$Audiogram.Int[data.lr$Audiogram.Int == c(8)] <- 2
data.lr$Audiogram.Int[data.lr$Audiogram.Int == c(9)] <- 3
data.lr$sex.Int <- as.integer(data.lr$sex)
data.lr$fifteen_d_1_move.Int <- as.integer(data.lr$fifteen_d_1_move)
data.lr$own_ha.x.Int <- as.integer(data.lr$own_ha.x)
data.lr$alcohol_consumption.Int <- as.integer(data.lr$alcohol_consumption)
data.lr$noise_work_duration_1.Int <- as.integer(data.lr$noise_work_duration_1)
data.lr$noise_work_intensity_1.Int <- as.integer(data.lr$noise_work_intensity_1)
data.lr$ha_type[(data.lr$ha_type == 1) | (data.lr$ha_type == 2)] <- 1
data.lr$ha_type[!((data.lr$ha_type == 1) | (data.lr$ha_type == 2))] <- 2
eq3 <- ha_usetime_hours_per_day ~ ioi_ha_2 + ioi_ha_3 + ioi_ha_4 + ioi_ha_5 + ioi_ha_6 + ioi_ha_7  + Motivation + ssq_speech_q1 + ssq_speech_q4 + ssq_sound_q2 + ssq_speech_q10 + ssq_speech_q11 + ssq_speech_q12 + ssq_space_q6 + ssq_space_q9 + ssq_space_q13 + ssq_sound_q7 + ssq_sound_q9 + ssq_sound_q14 + Audiogram.Int + age +  sex.Int +
fifteen_d_3_hear + fifteen_d_4_breathe + fifteen_d_5_sleep + fifteen_d_6_eat + fifteen_d_1_move.Int + fifteen_d_2_sight + fifteen_d_7_speak + fifteen_d_8_pee + fifteen_d_9_activity + fifteen_d_10_mental + fifteen_d_11_unplesant + fifteen_d_12_depression + fifteen_d_13_stress + fifteen_d_14_power + fifteen_d_15_sex + dissiness + Hyperacusis +  alcohol_consumption.Int +  ha_type
fit.lm <- lm(eq3,data = data.lr, na.action=na.exclude)
summary(fit.lm)
colnames(data.lr)[104] <- 'Motivation'
colnames(data.lr)[94] <- 'Hyperacusis'
colnames(data.lr)[115] <- 'Audiogram'
for(i in 1:ncol(data.lr)){
data[is.na(data.lr[,i]), i] <- mean(data.lr[,i], na.rm = TRUE)
}
q()
? fa
? fa
library('caret')
? fa
source('setup.R')
tmp <- t3.data.15d %>% merge(t3.data.ssq,by = c('record_id','redcap_event_name')) %>%
merge(t3.data.thi, c('record_id','redcap_event_name')) %>%
merge(df_fitting_rationale, c('record_id','redcap_event_name')) %>% merge(df_ioi, c('record_id','redcap_event_name'))
tmp <- tmp %>% merge(df_tinnitus, c('record_id')) %>%
merge(df_motivation, c('record_id')) %>%
merge(df_ha_use, c('record_id')) %>%
merge(df_audiogram, c('record_id')) %>%
merge(df_CCI, c('record_id'))
library('rpart')
library('partykit')
library('rpart.plot')
library('ggplot2')
library('gridExtra')
eq <- AudClass ~  sex + charl2_score + age
fit.rpart <- rpart(eq, data = tmp, method = 'class', parms = list(split = 'information'), control = rpart.control(cp = 0.003))
png('Question 1a.png',width = 3000, height = 2000)
plot(as.party(fit.rpart))
dev.off()
male <- tmp[tmp$sex == 'Male',]
female <- tmp[tmp$sex == 'Female',]
gender <- c('male','female')
workNoise <- c(length(male$noise_at_work == 'Yes'), length(female$noise_at_work == 'Yes'))
workDuration <- c(mean(male$noise_employment_yrs_2[!(is.na(male$noise_employment_yrs_2))]), mean(female$noise_employment_yrs_2[!(is.na(female$noise_employment_yrs_2))]))
plot.frame <- data.frame(gender, workNoise, workDuration)
plt1 <- ggplot(plot.frame, aes( x = gender, y = workNoise, fill = gender)) +
geom_bar(stat = 'identity', width = .9, show.legend = FALSE) + xlab('') + ylab('Noise during work (# Yes)') +
scale_y_continuous(limits = c(0, 1000)) + theme_grey(base_size = 20)
plt2 <- ggplot(plot.frame, aes(x = gender, y = workDuration, fill = gender)) +
geom_bar(stat = 'identity', width = .9, show.legend = FALSE) + xlab('') + ylab('Noise Duration (years)') +
scale_y_continuous(limits = c(0, 20)) + theme_grey(base_size = 20)
png('Noise exposure.png',width = 1000, height = 600)
grid.arrange(plt1, plt2, ncol = 2)
dev.off()
library('caret')
library('psych')
data.ssq <- tmp[,seq(22,33,1)]
ssq.cor <- cor(data.ssq, use = 'complete.obs')
#now the factor analysis - make them orthogonal first
png('Scree.png',width = 1000, height = 700)
nr.factors <- fa.parallel(ssq.cor, n.obs = 1700, fa = 'fa')
dev.off()
nr.factors
fa.ssq <- fa(ssq.cor, nfactors = 5, rotate = 'varimax', fm = 'pa',SMC = FALSE, n.obs = 1700)
fa.ssq
fa.ssq <- fa(ssq.cor, nfactors = 5, rotate = 'varimax', fm = 'ml',SMC = FALSE, n.obs = 1700)
fa.ssq
fa.ssq <- fa(ssq.cor, nfactors = 5, rotate = 'varimax', fm = 'pa',SMC = FALSE, n.obs = 1700)
fa.ssq
fa.ssq <- fa(ssq.cor, nfactors = 5, fm = 'ml',SMC = FALSE, n.obs = 1700)
fa.ssq
fa.ssq <- fa(ssq.cor, nfactors = 5, rotate = 'varimax', fm = 'ml',SMC = FALSE, n.obs = 1700)
fa.ssq
fa.ssq <- fa(ssq.cor, nfactors = 4, rotate = 'varimax', fm = 'ml',SMC = FALSE, n.obs = 1700)
fa.ssq
fa.ssq <- fa(ssq.cor, nfactors = 5, rotate = 'varimax', fm = 'pa',SMC = FALSE, n.obs = 1700)
fa.ssq
fa.ssq <- fa(ssq.cor, nfactors = 5, rotate = 'varimax', fm = 'minres',SMC = FALSE, n.obs = 1700)
fa.ssq
fa.ssq <- fa(ssq.cor, nfactors = 5, rotate = 'varimax', fm = 'pa',SMC = FALSE, n.obs = 1700)
fa.ssq
library('openxlsx')
library('dplyr')
library('ggplot2')
library('reshape2')
data.path <- '../data/'
raw.data <- read.xlsx(paste0(data.path,'AVM_DSA_Update_EPIE_DBER.xlsx'),sheet = 1)
#kick out Nan columns
clean.data <- raw.data[,-c(1,2,3,4,5,8,9,10,11,12,13,19,22,30,33,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,76,77)]
library('caret')
library('corrplot')
library('Hmisc')
new.data <- read.csv(paste0(data.path,'Cleaned_data_from_Python.csv'))
data.cor <- cor(new.data,use = 'complete.obs')
png('CorPlot.png', width = 2000, height = 2000)
corrplot(data.cor,method = 'circle')
dev.off()
tmp <- findCorrelation(data.cor,cutoff = 0.8)
filtered.data <- new.data[,-c(tmp)]
data.cor <- cor(filtered.data,use = 'complete.obs')
png('CorPlot_clean.png', width = 2000, height = 2000)
corrplot(data.cor,method = 'circle')
dev.off()
#now with probabilities
res <- rcorr(as.matrix(new.data))
flattenCorrMatrix <- function(cormat, pmat) {
ut <- upper.tri(cormat)
data.frame(
row = rownames(cormat)[row(cormat)[ut]],
column = rownames(cormat)[col(cormat)[ut]],
cor  =(cormat)[ut],
p = pmat[ut]
)
}
cortable <- flattenCorrMatrix(res$r,res$P)
corrtable <- data.frame(cortable$row[948:990],round(cortable$cor[948:990],2),round(cortable$p[948:990],3))
names(corrtable) <- c('Parameter','Correlation','p value')
write.xlsx(corrtable, "c:/Corrtable.xlsx")
library('caret')
library('corrplot')
library('Hmisc')
new.data <- read.csv(paste0(data.path,'Cleaned_data_from_Python.csv'))
data.cor <- cor(new.data,use = 'complete.obs')
png('CorPlot.png', width = 2000, height = 2000)
corrplot(data.cor,method = 'circle')
dev.off()
tmp <- findCorrelation(data.cor,cutoff = 0.8)
filtered.data <- new.data[,-c(tmp)]
data.cor <- cor(filtered.data,use = 'complete.obs')
png('CorPlot_clean.png', width = 2000, height = 2000)
corrplot(data.cor,method = 'circle')
dev.off()
#now with probabilities
res <- rcorr(as.matrix(new.data))
flattenCorrMatrix <- function(cormat, pmat) {
ut <- upper.tri(cormat)
data.frame(
row = rownames(cormat)[row(cormat)[ut]],
column = rownames(cormat)[col(cormat)[ut]],
cor  =(cormat)[ut],
p = pmat[ut]
)
}
cortable <- flattenCorrMatrix(res$r,res$P)
corrtable <- data.frame(cortable$row[948:990],round(cortable$cor[948:990],2),round(cortable$p[948:990],3))
names(corrtable) <- c('Parameter','Correlation','p value')
write.xlsx(corrtable, "Corrtable.xlsx")
library('caret')
library('corrplot')
library('Hmisc')
new.data <- read.csv(paste0(data.path,'Cleaned_data_from_Python.csv'))
data.cor <- cor(new.data,use = 'complete.obs')
png('CorPlot.png', width = 2000, height = 2000)
corrplot(data.cor,method = 'circle')
dev.off()
tmp <- findCorrelation(data.cor,cutoff = 0.8)
filtered.data <- new.data[,-c(tmp)]
data.cor <- cor(filtered.data,use = 'complete.obs')
png('CorPlot_clean.png', width = 2000, height = 2000)
corrplot(data.cor,method = 'circle')
dev.off()
#now with probabilities
res <- rcorr(as.matrix(new.data))
flattenCorrMatrix <- function(cormat, pmat) {
ut <- upper.tri(cormat)
data.frame(
row = rownames(cormat)[row(cormat)[ut]],
column = rownames(cormat)[col(cormat)[ut]],
cor  =(cormat)[ut],
p = pmat[ut]
)
}
cortable <- flattenCorrMatrix(res$r,res$P)
corrtable <- data.frame(cortable$row[948:990],round(cortable$cor[948:990],2),round(cortable$p[948:990],3))
names(corrtable) <- c('Parameter','Correlation','p value')
write.xlsx(corrtable, "Corrtable_VolumeOfHemorrhage.xlsx")
? nls
? geom_smooth
10^2
10^4
source('setup.R')
tmp <- t3.data.15d %>% merge(t3.data.ssq,by = c('record_id','redcap_event_name')) %>%
merge(t3.data.thi, c('record_id','redcap_event_name')) %>%
merge(df_fitting_rationale, c('record_id','redcap_event_name')) %>% merge(df_ioi, c('record_id','redcap_event_name'))
tmp <- tmp %>% merge(df_tinnitus, c('record_id')) %>%
merge(df_motivation, c('record_id')) %>%
merge(df_ha_use, c('record_id')) %>%
merge(df_audiogram, c('record_id')) %>%
merge(df_CCI, c('record_id'))
library('rpart')
library('partykit')
library('rpart.plot')
library('ggplot2')
library('gridExtra')
eq <- AudClass ~  sex + charl2_score + age
fit.rpart <- rpart(eq, data = tmp, method = 'class', parms = list(split = 'information'), control = rpart.control(cp = 0.003))
png('Question 1a.png',width = 3000, height = 2000)
plot(as.party(fit.rpart))
dev.off()
male <- tmp[tmp$sex == 'Male',]
female <- tmp[tmp$sex == 'Female',]
gender <- c('male','female')
workNoise <- c(length(male$noise_at_work == 'Yes'), length(female$noise_at_work == 'Yes'))
workDuration <- c(mean(male$noise_employment_yrs_2[!(is.na(male$noise_employment_yrs_2))]), mean(female$noise_employment_yrs_2[!(is.na(female$noise_employment_yrs_2))]))
plot.frame <- data.frame(gender, workNoise, workDuration)
plt1 <- ggplot(plot.frame, aes( x = gender, y = workNoise, fill = gender)) +
geom_bar(stat = 'identity', width = .9, show.legend = FALSE) + xlab('') + ylab('Noise during work (# Yes)') +
scale_y_continuous(limits = c(0, 1000)) + theme_grey(base_size = 20)
plt2 <- ggplot(plot.frame, aes(x = gender, y = workDuration, fill = gender)) +
geom_bar(stat = 'identity', width = .9, show.legend = FALSE) + xlab('') + ylab('Noise Duration (years)') +
scale_y_continuous(limits = c(0, 20)) + theme_grey(base_size = 20)
png('Noise exposure.png',width = 1000, height = 600)
grid.arrange(plt1, plt2, ncol = 2)
dev.off()
library('caret')
library('psych')
data.ssq <- tmp[,seq(22,33,1)]
ssq.cor <- cor(data.ssq, use = 'complete.obs')
#now the factor analysis - make them orthogonal first
png('Scree.png',width = 1000, height = 700)
nr.factors <- fa.parallel(ssq.cor, n.obs = 1700, fa = 'fa')
dev.off()
nr.factors
ioi.7 <- data.ioi
SSQ.12 <- data.ssq
SSQ.5 <- data.ssq[, c(2,7,9,11,12)]
#make average
SSQ.12.mean <- rowMeans(SSQ.12)
SSQ.5.mean <- rowMeans(SSQ.5)
SSQ.plot <- data.frame(SSQ.12.mean, SSQ.5.mean)
png('Scatter_SSQ.png', width = 900, height = 700)
ggplot(data = SSQ.plot, aes(x = SSQ.12.mean, y = SSQ.5.mean)) +
geom_point(color = 'blue', size = 2) +
geom_smooth(method = lm, linetype = 'solid', color = 'red', fill = 'black', size = 1, formular = y ~ 10^x) +
labs(x = 'SSQ-12', y = 'SSQ-5')  +
theme(axis.text = element_text(size = 20),
axis.title = element_text(size = 21)) +
annotate(geom="text", x=25, y=75, label="1.4 + 0.98 * SSQ-12",color='red', size=10) +
labs(title = 'Mean SSQ-12 scores vs. mean SSQ-5 scores') +
theme(title = element_text(size=25),
axis.title = element_text(size=24),
axis.text = element_text(size=23))
dev.off()
fit.ssq <- lm(data = SSQ.plot, SSQ.5.mean ~ SSQ.12.mean)
summary(fit.ssq)
SSQ.12 <- data.ssq
SSQ.5 <- data.ssq[, c(2,7,9,11,12)]
#make average
SSQ.12.mean <- rowMeans(SSQ.12)
SSQ.5.mean <- rowMeans(SSQ.5)
SSQ.plot <- data.frame(SSQ.12.mean, SSQ.5.mean)
png('Scatter_SSQ.png', width = 900, height = 700)
ggplot(data = SSQ.plot, aes(x = SSQ.12.mean, y = SSQ.5.mean)) +
geom_point(color = 'blue', size = 2) +
geom_smooth(method = lm, linetype = 'solid', color = 'red', fill = 'black', size = 1, formular = y ~ 10^(x/10)) +
labs(x = 'SSQ-12', y = 'SSQ-5')  +
theme(axis.text = element_text(size = 20),
axis.title = element_text(size = 21)) +
annotate(geom="text", x=25, y=75, label="1.4 + 0.98 * SSQ-12",color='red', size=10) +
labs(title = 'Mean SSQ-12 scores vs. mean SSQ-5 scores') +
theme(title = element_text(size=25),
axis.title = element_text(size=24),
axis.text = element_text(size=23))
dev.off()
fit.ssq <- lm(data = SSQ.plot, SSQ.5.mean ~ SSQ.12.mean)
summary(fit.ssq)
fit.ssq <- nls(data = SSQ.plot, SSQ.5.mean ~ SSQ.12.mean)
? nls
fit.ssq <- nls(SSQ.5.mean ~ 10^(SSQ.12.mean/10),data = SSQ.plot)
nls(SSQ.5.mean ~ 10^(SSQ.12.mean/10),data = SSQ.plot)
nls(y ~ 10^(x/10),data = SSQ.plot)
nls(SSQ.5.mean ~ 10^(SSQ.12.mean/10),data = SSQ.plot)
fit.ssq <- nls(y ~ 10*(SSQ.12.mean/10)^x,data = SSQ.plot)
fit.ssq <- nls(y ~ 10*(SSQ.12.mean/10)^x,data = SSQ.plot,start = list(x = 0))
fit.ssq <- nls(SSQ.5.mean ~ 10*(SSQ.12.mean/10)^x,data = SSQ.plot,start = list(x = 0))
summary(fit.ssq)
fit.ssq
SSQ.12 <- data.ssq
SSQ.5 <- data.ssq[, c(2,7,9,11,12)]
#make average
SSQ.12.mean <- rowMeans(SSQ.12)
SSQ.5.mean <- rowMeans(SSQ.5)
SSQ.plot <- data.frame(SSQ.12.mean, SSQ.5.mean)
png('Scatter_SSQ.png', width = 900, height = 700)
ggplot(data = SSQ.plot, aes(x = SSQ.12.mean, y = SSQ.5.mean)) +
geom_point(color = 'blue', size = 2) +
geom_smooth(method = lm, linetype = 'solid', color = 'red', fill = 'black', size = 1, formular = y ~ 10*(x/10)^x) +
labs(x = 'SSQ-12', y = 'SSQ-5')  +
theme(axis.text = element_text(size = 20),
axis.title = element_text(size = 21)) +
annotate(geom="text", x=25, y=75, label="1.4 + 0.98 * SSQ-12",color='red', size=10) +
labs(title = 'Mean SSQ-12 scores vs. mean SSQ-5 scores') +
theme(title = element_text(size=25),
axis.title = element_text(size=24),
axis.text = element_text(size=23))
dev.off()
fit.ssq <- nls(SSQ.5.mean ~ 10*(SSQ.12.mean/10)^x,data = SSQ.plot,start = list(x = 0))
summary(fit.ssq)
SSQ.12 <- data.ssq
SSQ.5 <- data.ssq[, c(2,7,9,11,12)]
#make average
SSQ.12.mean <- rowMeans(SSQ.12)
SSQ.5.mean <- rowMeans(SSQ.5)
SSQ.plot <- data.frame(SSQ.12.mean, SSQ.5.mean)
png('Scatter_SSQ.png', width = 900, height = 700)
ggplot(data = SSQ.plot, aes(x = SSQ.12.mean, y = SSQ.5.mean)) +
geom_point(color = 'blue', size = 2) +
geom_smooth(method = lm, linetype = 'solid', color = 'red', fill = 'black', size = 1, formular = y ~ 10*(SSQ.12.mean/10)^x) +
labs(x = 'SSQ-12', y = 'SSQ-5')  +
theme(axis.text = element_text(size = 20),
axis.title = element_text(size = 21)) +
annotate(geom="text", x=25, y=75, label="1.4 + 0.98 * SSQ-12",color='red', size=10) +
labs(title = 'Mean SSQ-12 scores vs. mean SSQ-5 scores') +
theme(title = element_text(size=25),
axis.title = element_text(size=24),
axis.text = element_text(size=23))
dev.off()
fit.ssq <- nls(SSQ.5.mean ~ 10*(SSQ.12.mean/10)^x,data = SSQ.plot,start = list(x = 0))
summary(fit.ssq)
SSQ.12 <- data.ssq
SSQ.5 <- data.ssq[, c(2,7,9,11,12)]
#make average
SSQ.12.mean <- rowMeans(SSQ.12)
SSQ.5.mean <- rowMeans(SSQ.5)
SSQ.plot <- data.frame(SSQ.12.mean, SSQ.5.mean)
png('Scatter_SSQ.png', width = 900, height = 700)
ggplot(data = SSQ.plot, aes(x = SSQ.12.mean, y = SSQ.5.mean)) +
geom_point(color = 'blue', size = 2) +
geom_smooth(method = lm, linetype = 'solid', color = 'red', fill = 'black', size = 1, formular = y ~ 10*(SSQ.5.mean/10)^x) +
labs(x = 'SSQ-12', y = 'SSQ-5')  +
theme(axis.text = element_text(size = 20),
axis.title = element_text(size = 21)) +
annotate(geom="text", x=25, y=75, label="1.4 + 0.98 * SSQ-12",color='red', size=10) +
labs(title = 'Mean SSQ-12 scores vs. mean SSQ-5 scores') +
theme(title = element_text(size=25),
axis.title = element_text(size=24),
axis.text = element_text(size=23))
dev.off()
fit.ssq <- nls(SSQ.5.mean ~ 10*(SSQ.12.mean/10)^x,data = SSQ.plot,start = list(x = 0))
summary(fit.ssq)
SSQ.12 <- data.ssq
SSQ.5 <- data.ssq[, c(2,7,9,11,12)]
#make average
SSQ.12.mean <- rowMeans(SSQ.12)
SSQ.5.mean <- rowMeans(SSQ.5)
SSQ.plot <- data.frame(SSQ.12.mean, SSQ.5.mean)
png('Scatter_SSQ.png', width = 900, height = 700)
ggplot(data = SSQ.plot, aes(x = SSQ.12.mean, y = SSQ.5.mean)) +
geom_point(color = 'blue', size = 2) +
geom_smooth(method = lm, linetype = 'solid', color = 'red', fill = 'black', size = 1, formular = SSQ.5.mean ~ 10*(SSQ.12.mean/10)^x) +
labs(x = 'SSQ-12', y = 'SSQ-5')  +
theme(axis.text = element_text(size = 20),
axis.title = element_text(size = 21)) +
annotate(geom="text", x=25, y=75, label="1.4 + 0.98 * SSQ-12",color='red', size=10) +
labs(title = 'Mean SSQ-12 scores vs. mean SSQ-5 scores') +
theme(title = element_text(size=25),
axis.title = element_text(size=24),
axis.text = element_text(size=23))
dev.off()
fit.ssq <- nls(SSQ.5.mean ~ 10*(SSQ.12.mean/10)^x,data = SSQ.plot,start = list(x = 0))
summary(fit.ssq)
SSQ.12 <- data.ssq
SSQ.5 <- data.ssq[, c(2,7,9,11,12)]
#make average
SSQ.12.mean <- rowMeans(SSQ.12)
SSQ.5.mean <- rowMeans(SSQ.5)
SSQ.plot <- data.frame(SSQ.12.mean, SSQ.5.mean)
png('Scatter_SSQ.png', width = 900, height = 700)
ggplot(data = SSQ.plot, aes(x = SSQ.12.mean, y = SSQ.5.mean)) +
geom_point(color = 'blue', size = 2) +
geom_smooth(method = lm, linetype = 'solid', color = 'red', fill = 'black', size = 1, formular = SSQ.5.mean ~ 10*(SSQ.12.mean/10)^x) +
labs(x = 'SSQ-12', y = 'SSQ-5')  +
theme(axis.text = element_text(size = 20),
axis.title = element_text(size = 21)) +
annotate(geom="text", x=25, y=75, label="1.4 + 0.98 * SSQ-12",color='red', size=10) +
labs(title = 'Mean SSQ-12 scores vs. mean SSQ-5 scores') +
theme(title = element_text(size=25),
axis.title = element_text(size=24),
axis.text = element_text(size=23))
dev.off()
fit.ssq <- nls(SSQ.5.mean ~ 10*(SSQ.12.mean/10)^x, data = SSQ.plot, start = list(x = 1))
summary(fit.ssq)
SSQ.12 <- data.ssq
SSQ.5 <- data.ssq[, c(2,7,9,11,12)]
#make average
SSQ.12.mean <- rowMeans(SSQ.12)
SSQ.5.mean <- rowMeans(SSQ.5)
SSQ.plot <- data.frame(SSQ.12.mean, SSQ.5.mean)
png('Scatter_SSQ.png', width = 900, height = 700)
ggplot(data = SSQ.plot, aes(x = SSQ.12.mean, y = SSQ.5.mean)) +
geom_point(color = 'blue', size = 2) +
geom_smooth(method = lm, linetype = 'solid', color = 'red', fill = 'black', size = 1, formular = SSQ.5.mean ~ 10*(SSQ.12.mean/10)^x) +
labs(x = 'SSQ-12', y = 'SSQ-5')  +
theme(axis.text = element_text(size = 20),
axis.title = element_text(size = 21)) +
annotate(geom="text", x=25, y=75, label="1.4 + 0.98 * SSQ-12",color='red', size=10) +
labs(title = 'Mean SSQ-12 scores vs. mean SSQ-5 scores') +
theme(title = element_text(size=25),
axis.title = element_text(size=24),
axis.text = element_text(size=23))
dev.off()
fit.ssq <- nls(SSQ.5.mean ~ a + 10*(SSQ.12.mean/10)^x, data = SSQ.plot, start = list(a= 0,x = 1))
summary(fit.ssq)
SSQ.12 <- data.ssq
SSQ.5 <- data.ssq[, c(2,7,9,11,12)]
#make average
SSQ.12.mean <- rowMeans(SSQ.12)
SSQ.5.mean <- rowMeans(SSQ.5)
SSQ.plot <- data.frame(SSQ.12.mean, SSQ.5.mean)
png('Scatter_SSQ.png', width = 900, height = 700)
ggplot(data = SSQ.plot, aes(x = SSQ.12.mean, y = SSQ.5.mean)) +
geom_point(color = 'blue', size = 2) +
geom_smooth(method = lm, linetype = 'solid', color = 'red', fill = 'black', size = 1, formular = SSQ.5.mean ~ 10*(SSQ.12.mean/10)^x) +
labs(x = 'SSQ-12', y = 'SSQ-5')  +
theme(axis.text = element_text(size = 20),
axis.title = element_text(size = 21)) +
annotate(geom="text", x=25, y=75, label="1.4 + 0.98 * SSQ-12",color='red', size=10) +
labs(title = 'Mean SSQ-12 scores vs. mean SSQ-5 scores') +
theme(title = element_text(size=25),
axis.title = element_text(size=24),
axis.text = element_text(size=23))
dev.off()
fit.ssq <- nls(SSQ.5.mean ~ a + (SSQ.12.mean)^x, data = SSQ.plot, start = list(a= 0,x = 1))
summary(fit.ssq)
GetLogData('AlgoBrowser3_right.log')
source(GetLogData.R)
source('GetLogData.R')
setwd("~/Steering/PM/Code")
source('GetLogData.R')
GetLogData('AlgoBrowser3_right.log')
bla <- GetLogData('AlgoBrowser3_right.log')
bla
View(bla)
a <- GetLogData('AlgoBrowser3_right.log')
a <- GetLogData('AlgoBrowser3_right.log')
a <- GetLogData('AlgoBrowser3_right.log')
a <- GetLogData('AlgoBrowser3_right.log')
a <- GetLogData('AlgoBrowser3_right.log')
a <- GetLogData('AlgoBrowser3_right.log')
a <- GetLogData('AlgoBrowser3_right.log')
source('ReadLogFiles.R')
a <- ReadLogData('AlgoBrowser3_right.log')
a <- ReadLogFiles('AlgoBrowser3_right.log')
source('ReadLogFiles.R')
a <- ReadLogFiles('AlgoBrowser3_right.log')
setwd("~/Steering/PM/Code")
a <- ReadLogFiles('AlgoBrowser3_right.log')
a <- ReadLogData('AlgoBrowser3_right.log')
source('GetLogData.R')
a <- ReadLogData('AlgoBrowser3_right.log')
setwd("~/Steering/PM/Code")
setwd("~/Steering/PM/Code")
a <- ReadLogData('AlgoBrowser3_right.log')
a <- GetLogData('AlgoBrowser3_right.log')
a <- GetLogData('AlgoBrowser3.log')
a
a <- GetLogData('AlgoBrowser3_right.log')
a <- GetLogData('AlgoBrowser3_right.log')
a <- GetLogData('AlgoBrowser3_right.log')
a <- GetLogData('AlgoBrowser3_right.log')
a <- GetLogData('AlgoBrowser3_right.log')
a <- GetLogData('AlgoBrowser3_right.log')
a <- GetLogData('AlgoBrowser3_right.log')
a <- GetLogData('AlgoBrowser3_right.log')
a
output
source('GetLogData.R')
a <- GetLogData('AlgoBrowser3_right.log')
output
a <- GetLogData('AlgoBrowser3_right.log')
a <- GetLogData('AlgoBrowser3_right.log')
a <- GetLogData('AlgoBrowser3_right.log')
a <- GetLogData('AlgoBrowser3_right.log')
source('GetLogData.R')
a <- GetLogData('AlgoBrowser3_right.log')
a <- GetLogData('AlgoBrowser3_right.log')
a <- GetLogData('AlgoBrowser3_right.log')
a <- GetLogData('AlgoBrowser3_right.log')
source('GetLogData.R')
a <- GetLogData('AlgoBrowser3_right.log')
source('GetLogData.R')
a <- GetLogData('AlgoBrowser3_right.log')
source('GetLogData.R')
a <- GetLogData('AlgoBrowser3_right.log')
a
View(a)
View(a)
View(a)
help(unlist)
